type User @model {
  id: ID! @isUnique
  name: String!
  email: String! @isUnique
  password: String! 
  schoolInfo: SchoolInfo @relation(name: "SchoolUsers")
  programCode: String
  activityLog: [Date!]! @relation(name:"UserActivities")
  point: Int @defaultValue(value:0)
  isActive: Boolean @defaultValue(value: "false")
  quizScore: Int
}

type SchoolInfo @model {
  id: ID! @isUnique
  school: String
  teacher: String
  division: Int
  grade: Int
  users: [User!]! @relation(name:"SchoolUsers")
  programCode: String!
}

type Date @model {
  id: ID! @isUnique
  user: User! @relation(name:"UserActivities")
  date: DateTime!
  activities: [Activity!]! @relation(name:"DateActivities")
}

type Activity @model {
  id: ID! @isUnique
  value: Int!
  name: String!
  description: String!
  date: Date @relation(name:"DateActivities")
  category: Category! @relation(name:"CategoryActivities")
  
}

type Category @model {
  id: ID! @isUnique
  name: String! 
  activities: [Activity!]! @relation(name:"CategoryActivities")
}


## TODO:
## filter user using programcode > sort 
## function that addes up point for each user
## filter date in user to display each activities
## mutation to add date with list of activities to user
## mutation to change date with list of activities to user
## mutation to add finalscore to the user data 
## user change status(deactivate/delink) mutation
##
