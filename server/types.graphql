type User @model {
  id: ID! @isUnique # read-only (managed by Graphcool)
  email: String! @isUnique
  password: String!
  name: String
  schoolInfo: SchoolInfo @relation(name: "SchoolUsers")
  programCode: String 
  activityLog: [ActivityLog!]! @relation(name:"UserActivityLogs")
  point: Int @defaultValue(value:"0")
  isActive: Boolean @defaultValue(value: "false")
  quizScore: Int
  createdAt: DateTime! # read-only
  ghPoint: String! @migrationValue(value: "42") @defaultValue(value:"0")
  
}

type SchoolInfo @model {
  id: ID! @isUnique
  school: String
  teacher: String
  division: Int
  grade: Int
  users: [User!]! @relation(name:"SchoolUsers")
  programCode: String!
}

type ActivityLog @model {
  id: ID! @isUnique
  user: User @relation(name:"UserActivityLogs")
  date: DateTime!
  activity: Activity! @relation(name:"ActivityActivityLogs")
}

type Activity @model {
  id: ID! @isUnique
  value: Int!
  ghValue: String @defaultValue(value:"0")
  name: String!
  description: String!
  activityLog: [ActivityLog!]! @relation(name:"ActivityActivityLogs")
  category: Category! @relation(name:"CategoryActivities")
}

type Category @model {
  id: ID! @isUnique
  name: String! 
  activities: [Activity!]! @relation(name:"CategoryActivities")
}



